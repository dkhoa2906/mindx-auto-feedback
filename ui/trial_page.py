import base64
import os

from autodocument.doc_fill import fill_in_form
import streamlit as st

from autodocument.convert import convert_docx_to_pdf
from autofeedback.genai import generate_feedback
from contact.email_direct import get_mailto_link


def display_trial_page():

    ############ CONFIG CHUNG ############
    ############### Begin ################
    st.set_page_config(layout="wide")
    st.markdown("""
        <style>
            .block-container {
                padding-left: 10rem;
                padding-right: 10rem;
                margin-bottom: 0.5rem;
            }
        </style>
    """, unsafe_allow_html=True)

    ################ End #################
    ############ CONFIG CHUNG ############


    col1, spacer, col2 = st.columns([1.2, 0.1, 0.8])


    ######## TH√îNG TIN CHUNG S∆† B·ªò ########
    ################ Begin ################

    with col1:
        st.title("üß† MindX Auto Tool")
        st.caption("Developed by Cao Dang Khoa. Vui l√≤ng s·ª≠ d·ª•ng c√≥ tr√°ch nhi·ªám.\n"
                   )
        st.caption("Tool n√†y ƒë∆∞·ª£c ph√°t tri·ªÉn nh·∫±m m·ª•c ƒë√≠ch h·ªó tr·ª£ vi·∫øt nh·∫≠n x√©t h·ªçc vi√™n m·ªôt c√°ch nhanh ch√≥ng v√† thu·∫≠n ti·ªán. "
                   "N·ªôi dung nh·∫≠n x√©t ƒë∆∞·ª£c g·ª£i √Ω "
                   "d·ª±a tr√™n th√¥ng tin ng∆∞·ªùi d√πng cung c·∫•p v√† c√≥ th·ªÉ c·∫ßn ƒë∆∞·ª£c ƒëi·ªÅu ch·ªânh tr∆∞·ªõc khi s·ª≠ d·ª•ng ch√≠nh th·ª©c.")
        st.caption("Ch√∫ng t√¥i kh√¥ng ch·ªãu tr√°ch nhi·ªám v·ªÅ b·∫•t k·ª≥ sai s√≥t, thi·∫øu s√≥t ho·∫∑c h·∫≠u qu·∫£ n√†o ph√°t sinh t·ª´ vi·ªác s·ª≠ "
                   "d·ª•ng tr·ª±c ti·∫øp n·ªôi dung nh·∫≠n x√©t m√† kh√¥ng ki·ªÉm tra l·∫°i. Ng∆∞·ªùi d√πng c·∫ßn t·ª± ch·ªãu tr√°ch nhi·ªám ki·ªÉm duy·ªát "
                   "v√† ƒëi·ªÅu ch·ªânh n·ªôi dung tr∆∞·ªõc khi g·ª≠i cho ph·ª• huynh, h·ªçc sinh ho·∫∑c c√°c b√™n li√™n quan.")

        col1l, col1m, col1r = st.columns([0.6, 1, 2])

        with col1l:
            if st.button("üîÑ Reset"):
                st.rerun()
        with col1m:
            st.link_button("üêû Contact", get_mailto_link())

        col1l, col1m, col1r = st.columns([1, 0.1, 1])

        with col1l:
            student_name = st.text_input("T√™n h·ªçc vi√™n")
            student_yob = st.text_input("NƒÉm sinh:")
            subject = st.selectbox("Ch·ªçn b·ªô m√¥n", ["-", "Robotics - KIRO", "Robotics - PRE", "Robotics - ARM",
                                                   "Scratch Creator - SB", "Game Creator - GB"])
            trial_result = st.selectbox("K·∫øt qu·∫£ trial", ["Ph√π h·ª£p", "Ch∆∞a ph√π h·ª£p"])

        with col1r:
            trial_mentor = st.text_input("Gi√°o vi√™n h∆∞·ªõng d·∫´n")
            trial_place = st.selectbox("C∆° s·ªü", ["-", "99 L√™ VƒÉn Vi·ªát", "Dƒ© An", "N√†o r·∫£nh th√™m m·∫•y c∆° s·ªü kh√°c :D"])
            trial_date = st.date_input("Ng√†y tr·∫£i nghi·ªám", value="today", max_value="today", format="DD/MM/YYYY")
            suggested_level = st.selectbox("C·∫•p ƒë·ªô ƒë·ªÅ xu·∫•t", ["Basic", "Advanced", "Intensive"])

    ################# End #################
    ######## TH√îNG TIN CHUNG S∆† B·ªò ########



    ############ ƒêI·ªÇM ƒê√ÅNH GI√Å ############
    ################ Begin ################

    with col2:
        points = []

        if subject in ["Game Creator - GB", "Scratch Creator - SB"]:
            categories = [
                "Ho√†n th√†nh th·ª≠ th√°ch trong kho·∫£ng th·ªùi gian quy ƒë·ªãnh",
                "Bi·∫øt c√°ch ·ª©ng d·ª•ng c√¥ng ngh·ªá ƒë·ªÉ ho√†n th√†nh th·ª≠ th√°ch",
                "C√≥ ki·∫øn th·ª©c n·ªÅn t·∫£ng (v·ªÅ vƒÉn ho√°, t·ª± nhi√™n, x√£ h·ªôi...)",

                "S·∫£n ph·∫©m t·∫°o ra trong qu√° tr√¨nh tr·∫£i nghi·ªám c√≥ t√≠nh s√°ng t·∫°o (c·ªët truy·ªán, x√¢y d·ª±ng nh√¢n v·∫≠t, m√†u s·∫Øc, √¢m thanh, v.v.)",
                "Kh·∫£ nƒÉng bi·∫øn t·∫•u t·ª´ m·∫´u c√≥ s·∫µn, t·∫°o ra s·∫£n ph·∫©m ƒë·ªôc ƒë√°o",

                "Bi·∫øt c√°ch t·ªï ch·ª©c suy nghƒ© v√† h√†nh ƒë·ªông theo c√°c b∆∞·ªõc logic v√† tr√¨nh t·ª±",
                "Khi g·∫∑p l·ªói ho·∫∑c v·∫•n ƒë·ªÅ khi l·∫≠p tr√¨nh, h·ªçc vi√™n bi·∫øt c√°ch x√°c ƒë·ªãnh v√† s·ª≠a ch·ªØa c√°c l·ªói",

                "Thuy·∫øt tr√¨nh chia s·∫ª √Ω t∆∞·ªüng, s·∫£n ph·∫©m",
                "M·∫°nh d·∫°n, t·ª± tin trong giao ti·∫øp, ƒë·∫∑t c√¢u h·ªèi khi c·∫ßn"
            ]

            for idx, category in enumerate(categories):
                point = st.slider(f"M·ª•c {idx+1}. \n {category}", 1, 5, 1)
                points.append(point)

        elif subject in ["Robotics - PRE", "Robotics - ARM"]:

            categories = [
                "Hi·ªÉu c·∫•u tr√∫c v√† ch·ª©c nƒÉng c·ªßa motor v√† servo",
                "Bi·∫øt c√°ch k·∫øt n·ªëi v√† l·∫Øp ƒë·∫∑t c√°c th√†nh ph·∫ßn c∆° b·∫£n",
                "C√≥ kh·∫£ nƒÉng s·ª≠ d·ª•ng c√¥ng c·ª• v√† ph·ª• ki·ªán l·∫Øp r√°p",

                "L·∫Øp r√°p m·ªôt Robot ƒë∆°n gi·∫£n",

                "Hi·ªÉu c√∫ ph√°p v√† c·∫•u tr√∫c c∆° b·∫£n c·ªßa ng√¥n ng·ªØ l·∫≠p tr√¨nh",
                "Hi·ªÉu v√† s·ª≠ d·ª•ng c√°c c√¢u l·ªánh ƒëi·ªÅu khi·ªÉn c∆° b·∫£n (di chuy·ªÉn, quay ƒë·∫ßu, n√¢ng h·∫°)",
                "L·∫≠p tr√¨nh robot ƒë·ªÉ ho√†n th√†nh m·ªôt nhi·ªám v·ª• ƒë∆°n gi·∫£n",

                "Hi·ªÉu v√† s·ª≠ d·ª•ng c√°c c·∫•u tr√∫c ƒëi·ªÅu khi·ªÉn ph·ª©c t·∫°p (v√≤ng l·∫∑p, r·∫Ω nh√°nh)",
                "L·∫≠p tr√¨nh robot ƒë·ªÉ ho√†n th√†nh m·ªôt nhi·ªám v·ª• ph·ª©c t·∫°p",

                "Giao ti·∫øp hi·ªáu qu·∫£ v·ªõi b·∫°n v√† gi√°o vi√™n h∆∞·ªõng d·∫´n",
                "Tr√¨nh b√†y √Ω ki·∫øn v√† √Ω t∆∞·ªüng m·ªôt c√°ch r√µ r√†ng v√† logic",

                "S·ª≠ d·ª•ng thu·∫≠t ng·ªØ v√† ng√¥n ng·ªØ chuy√™n ng√†nh ph√π h·ª£p trong lƒ©nh v·ª±c Robotics",
                "M√¥ t·∫£ c√°c kh√°i ni·ªám k·ªπ thu·∫≠t m·ªôt c√°ch r√µ r√†ng v√† d·ªÖ hi·ªÉu",

                "Nh·∫≠n bi·∫øt v√† ph√¢n bi·ªát c√°c m√†u s·∫Øc c∆° b·∫£n (ƒë·ªè, xanh, v√†ng)",
                "Nh·∫≠n bi·∫øt v√† ƒë·ªãnh v·ªã c√°c v·∫≠t th·ªÉ trong kh√¥ng gian"
            ]

            col2l, col2m, col2r = st.columns([1, 0.01, 1])

            for idx, category in enumerate(categories):
                if idx < 8:
                    with col2l:
                        point = st.slider(f"M·ª•c {idx + 1}. \n {category}", 1, 3, 1)
                        points.append(point)
                else:
                    with col2r:
                        point = st.slider(f"M·ª•c {idx + 1}. \n {category}", 1, 3, 1)
                        points.append(point)

        elif subject in ["Robotics - KIRO"]:
            categories = {
                "NƒÇNG L·ª∞C NH·∫¨N BI·∫æT V√Ä KH√ÅM PH√Å": """
                1Ô∏è‚É£ C·∫ßn gi√°o vi√™n h·ªó tr·ª£ ph√¢n bi·ªát h√¨nh d·∫°ng v√† m√†u s·∫Øc chi ti·∫øt l·∫Øp r√°p.  
                2Ô∏è‚É£ Nh·∫≠n di·ªán ƒë∆∞·ª£c m√†u s·∫Øc v√† h√¨nh d·∫°ng nh∆∞ng v·∫´n nh·∫ßm l·∫´n, c·∫ßn h·ªó tr·ª£.  
                3Ô∏è‚É£ Nh·∫≠n di·ªán ƒë√∫ng h√¨nh d·∫°ng v√† m√†u s·∫Øc.  
                4Ô∏è‚É£ Nh·∫≠n bi·∫øt ƒë√∫ng, c√≥ th·ªÉ di·ªÖn ƒë·∫°t ch·ª©c nƒÉng c√°c b·ªô ph·∫≠n.  
                5Ô∏è‚É£ Ghi nh·ªõ m√¥ h√¨nh, s√°ng t·∫°o khi c·∫£i ti·∫øn m√¥ h√¨nh.
                """,

                "NƒÇNG L·ª∞C L·∫ÆP R√ÅP V√Ä T∆Ø DUY KH√îNG GIAN": """
                1Ô∏è‚É£ G·∫∑p nhi·ªÅu kh√≥ khƒÉn, sai s√≥t nhi·ªÅu, c·∫ßn h·ªó tr·ª£ li√™n t·ª•c.  
                2Ô∏è‚É£ Ch·ªçn ƒë√∫ng chi ti·∫øt nh∆∞ng l·∫Øp sai h∆∞·ªõng/v·ªã tr√≠, c·∫ßn h·ªó tr·ª£.  
                3Ô∏è‚É£ ƒê√∫ng chi ti·∫øt v√† v·ªã tr√≠, ƒë√¥i l√∫c sai, c·∫ßn nh·∫Øc nh·ªü.  
                4Ô∏è‚É£ L·∫Øp r√°p ch√≠nh x√°c, bi·∫øt s·ª≠a sai khi ƒë∆∞·ª£c g·ª£i √Ω.  
                5Ô∏è‚É£ L·∫Øp ƒë√∫ng, t·ª± s·ª≠a sai, kh√¥ng c·∫ßn h·ªó tr·ª£.
                """,

                "NƒÇNG L·ª∞C L·∫¨P TR√åNH": """
                1Ô∏è‚É£ Ch∆∞a k√©o th·∫£ ƒë∆∞·ª£c, g·∫∑p kh√≥ khƒÉn k·ªÉ c·∫£ khi c√≥ h·ªó tr·ª£.  
                2Ô∏è‚É£ K√©o th·∫£ ƒë∆∞·ª£c nh∆∞ng ch∆∞∆°ng tr√¨nh sai, c·∫ßn ch·ªânh s·ª≠a.  
                3Ô∏è‚É£ L·∫≠p tr√¨nh ƒë·ªÉ m√¥ h√¨nh ho·∫°t ƒë·ªông ƒë∆°n gi·∫£n, c·∫ßn g·ª£i √Ω.  
                4Ô∏è‚É£ L·∫≠p tr√¨nh ƒë√∫ng y√™u c·∫ßu, √≠t c·∫ßn h·ªó tr·ª£.  
                5Ô∏è‚É£ Thao t√°c nhanh, ch√≠nh x√°c, ch·ªß ƒë·ªông ƒëi·ªÅu ch·ªânh.
                """,

                "NƒÇNG L·ª∞C GIAO TI·∫æP V√Ä H·ª¢P T√ÅC": """
                1Ô∏è‚É£ Ch∆∞a ph·∫£n h·ªìi, ch∆∞a h·ª£p t√°c v·ªõi gi√°o vi√™n.  
                2Ô∏è‚É£ C√≥ ph·∫£n h·ªìi ng·∫Øn, ch∆∞a t√≠ch c·ª±c tham gia.  
                3Ô∏è‚É£ Ph·∫£n h·ªìi v√† h·ª£p t√°c, nh∆∞ng c√≤n r·ª•t r√®.  
                4Ô∏è‚É£ Ch·ªß ƒë·ªông giao ti·∫øp, h·ª£p t√°c t·ªët trong ho·∫°t ƒë·ªông.  
                5Ô∏è‚É£ Giao ti·∫øp t·ª± tin, s·∫µn s√†ng chia s·∫ª m√¥ h√¨nh/c√¢u chuy·ªán.
                """
            }

            for idx, (category, description) in enumerate(categories.items(), 1):
                st.markdown(f'<h4 style="font-size: 18px;">{idx}. {category}</h4>', unsafe_allow_html=True)
                st.caption(description)
                point = st.slider("Ch·ªçn m·ª©c ƒëi·ªÉm ƒë√°nh gi√°", 1, 5, 1, key=f"score{idx}")
                points.append(point)

    ################ End #################
    ############ ƒêI·ªÇM ƒê√ÅNH GI√Å ###########



    ############ T·∫†O NH·∫¨N X√âT #############
    ################ Begin ################

    with col1:
        if "docx_path" not in st.session_state:
            st.session_state.docx_path = None

        if "feedback" not in st.session_state:
            st.session_state.feedback = None

        basic_comment = st.text_area("Nh·∫≠n x√©t s∆° b·ªô")

        if st.button("T·∫°o nh·∫≠n x√©t"):
            st.session_state.docx_path = None
            st.session_state.pdf_path = None

            with st.spinner("üß† ƒêang t·∫°o nh·∫≠n x√©t..."):
                feedback = generate_feedback(student_name, basic_comment, subject, points, trial_result, suggested_level)
                st.session_state.feedback = feedback
                st.success("‚úÖ ƒê√£ t·∫°o nh·∫≠n x√©t!")

    ################ End #################
    ############# T·∫†O NH·∫¨N X√âT ###########



    ############## X√ÅC NH·∫¨N ##############
    ############### Begin ################

    with col1:
        if st.session_state.feedback:
            st.text_area("Ch·ªânh s·ª≠a nh·∫≠n x√©t", value=st.session_state.feedback, height=300, key="final_feedback")

            pdf_needed = st.checkbox("Enable PDF exporting")

            if st.button("ü´° X√°c nh·∫≠n"):
                with st.spinner("üîÑ ƒêang nh·∫≠p th√¥ng tin v√†o file..."):
                    feedback = st.session_state.final_feedback
                    st.success("‚úÖ ƒê√£ nh·∫≠p th√¥ng tin")

                with st.spinner("üîÑ ƒêang l∆∞u file..."):
                    docx_path = fill_in_form(student_name, student_yob, subject, trial_date, trial_mentor, trial_place, points, feedback)
                    st.session_state.docx_path = docx_path
                    st.success("‚úÖ ƒê√£ l∆∞u file d∆∞·ªõi d·∫°ng .DOCX")

                if pdf_needed:
                    with st.spinner("üîÑ ƒêang xu·∫•t file sang .PDF..."):
                        pdf_path = convert_docx_to_pdf(docx_path, "pdf_output")
                        st.session_state.pdf_path = pdf_path

                st.success("‚úÖ T·ª± ƒë·ªông ƒëi·ªÅn ho√†n t·∫•t! B·∫•m n√∫t b√™n d∆∞·ªõi ƒë·ªÉ t·∫£i xu·ªëng.")

            col1l, col1m, col1r = st.columns([2, 1, 1])

            if st.session_state.docx_path:
                with open(st.session_state.docx_path, "rb") as f:
                    with col1r:
                        st.download_button("üì• T·∫£i file DOCX", f, file_name=os.path.basename(st.session_state.docx_path))

            elif st.session_state.pdf_path:
                with open(st.session_state.docx_path, "rb") as f:
                    with col1m:
                        st.download_button("üì• T·∫£i file DOCX", f, file_name=os.path.basename(st.session_state.docx_path))
                with open(st.session_state.pdf_path, "rb") as f:
                    with col1r:
                        st.download_button("üì• T·∫£i file PDF", f, file_name=os.path.basename(st.session_state.pdf_path))

    ################# End #################
    ############### X√ÅC NH·∫¨N ##############